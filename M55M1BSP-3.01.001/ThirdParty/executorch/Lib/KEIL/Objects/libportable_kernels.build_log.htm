<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.40.0.0
Copyright (C) 2024 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: chen ch
nuvoton
User-based license: Keil MDK Community (non-commercial free of charge)
Valid until: Jun 1 2033. Cached until: Jun 19 2024
 
Tool Versions:
Toolchain:       Keil MDK Community (non-commercial free of charge  Version: 5.40.0.3
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.22
Assembler:       Armasm.exe V6.22
Linker/Locator:  ArmLink.exe V6.22
Library Manager: ArmAr.exe V6.22
Hex Converter:   FromElf.exe V6.22
CPU DLL:         
Dialog DLL:      
Target DLL:      UL2V8M.DLL V1.7.12.0
Dialog DLL:      TCM.DLL V1.56.4.0
 
<h2>Project:</h2>
D:\M55M1_NuEdgeWise\ML_M55M1_SampleCode\M55M1BSP-3.00.001\ThirdParty\executorch\Lib\KEIL\libportable_kernels.uvprojx
Project File Date:  06/12/2024

<h2>Output:</h2>
*** Using Compiler 'V6.22', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Rebuild target 'Release'
compiling op_acos.cpp...
compiling op_acosh.cpp...
compiling op_abs.cpp...
compiling op_atanh.cpp...
compiling op_atan.cpp...
compiling op_asinh.cpp...
compiling op_asin.cpp...
compiling op_alias_copy.cpp...
compiling op_allclose.cpp...
compiling op_bitwise_not.cpp...
compiling op_arange.cpp...
compiling op_as_strided_copy.cpp...
compiling op_argmax.cpp...
compiling op_argmin.cpp...
compiling op_avg_pool2d.cpp...
compiling op_amin.cpp...
compiling op_amax.cpp...
compiling op_bmm.cpp...
compiling op_ceil.cpp...
compiling op_cos.cpp...
compiling op_clone.cpp...
compiling op_cosh.cpp...
../../kernels/portable/cpu/op_cdist_forward.cpp(10): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/distance_util.h(119): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
  119 |   } else if (p == INFINITY) {
      |                   ^
../../kernels/portable/cpu/op_cdist_forward.cpp(109): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
  109 |   } else if (p == INFINITY) {
      |                   ^
2 warnings generated.
compiling op_cdist_forward.cpp...
compiling op_detach_copy.cpp...
compiling op_constant_pad_nd.cpp...
compiling op_cat.cpp...
compiling op_empty.cpp...
compiling op_embedding.cpp...
compiling op_diagonal_copy.cpp...
compiling op_addmm.cpp...
compiling op_erf.cpp...
compiling op_exp.cpp...
compiling op_expand_copy.cpp...
compiling op_any.cpp...
compiling op_expm1.cpp...
compiling op_floor.cpp...
compiling op_cumsum.cpp...
compiling op_flip.cpp...
compiling op_fill.cpp...
compiling op_full.cpp...
compiling op_full_like.cpp...
compiling op_copy.cpp...
../../kernels/portable/cpu/op_gelu.cpp(41): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |             if (x == -std::numeric_limits<CTYPE>::infinity()) {
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(993): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  993 |       exec_aten::ScalarType::Double, CTYPE_ALIAS, __VA_ARGS__) \
      |                                                   ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(43): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   43 |             } else if (x == std::numeric_limits<CTYPE>::infinity()) {
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(993): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  993 |       exec_aten::ScalarType::Double, CTYPE_ALIAS, __VA_ARGS__) \
      |                                                   ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(44): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   44 |               return std::numeric_limits<CTYPE>::infinity();
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(993): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  993 |       exec_aten::ScalarType::Double, CTYPE_ALIAS, __VA_ARGS__) \
      |                                                   ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(61): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   61 |             if (x == -std::numeric_limits<CTYPE>::infinity()) {
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(993): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  993 |       exec_aten::ScalarType::Double, CTYPE_ALIAS, __VA_ARGS__) \
      |                                                   ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(63): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   63 |             } else if (x == std::numeric_limits<CTYPE>::infinity()) {
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(993): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  993 |       exec_aten::ScalarType::Double, CTYPE_ALIAS, __VA_ARGS__) \
      |                                                   ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(64): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   64 |               return std::numeric_limits<CTYPE>::infinity();
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(993): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  993 |       exec_aten::ScalarType::Double, CTYPE_ALIAS, __VA_ARGS__) \
      |                                                   ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(41): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |             if (x == -std::numeric_limits<CTYPE>::infinity()) {
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(995): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  995 |       exec_aten::ScalarType::Float, CTYPE_ALIAS, __VA_ARGS__)
      |                                                  ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(43): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   43 |             } else if (x == std::numeric_limits<CTYPE>::infinity()) {
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(995): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  995 |       exec_aten::ScalarType::Float, CTYPE_ALIAS, __VA_ARGS__)
      |                                                  ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(44): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   44 |               return std::numeric_limits<CTYPE>::infinity();
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(995): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  995 |       exec_aten::ScalarType::Float, CTYPE_ALIAS, __VA_ARGS__)
      |                                                  ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(61): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   61 |             if (x == -std::numeric_limits<CTYPE>::infinity()) {
      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(995): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  995 |       exec_aten::ScalarType::Float, CTYPE_ALIAS, __VA_ARGS__)
      |                                                  ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(63): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   63 |             } else if (x == std::numeric_limits<CTYPE>::infinity()) {
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(995): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  995 |       exec_aten::ScalarType::Float, CTYPE_ALIAS, __VA_ARGS__)
      |                                                  ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
../../kernels/portable/cpu/op_gelu.cpp(64): warning: use of infinity is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   64 |               return std::numeric_limits<CTYPE>::infinity();
      |                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(1144): note: expanded from macro 'ET_SWITCH_FLOAT_TYPES'
 1144 |       ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES(CTYPE_ALIAS, __VA_ARGS__))
      |                                                        ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(995): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE_FLOAT_TYPES'
  995 |       exec_aten::ScalarType::Float, CTYPE_ALIAS, __VA_ARGS__)
      |                                                  ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(879): note: expanded from macro 'ET_INTERNAL_SWITCH_CASE'
  879 |     return __VA_ARGS__();                                     \
      |            ^~~~~~~~~~~
../../../../ThirdParty\executorch/runtime/core/exec_aten/util/scalar_type_util.h(888): note: expanded from macro 'ET_INTERNAL_SWITCH'
  888 |       __VA_ARGS__                                    \
      |       ^~~~~~~~~~~
12 warnings generated.
compiling op_gelu.cpp...
compiling op_glu.cpp...
compiling op_atan2.cpp...
compiling op_index.cpp...
../../kernels/portable/cpu/op_hardtanh.cpp(13): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                               ^
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                                          ^
2 warnings generated.
compiling op_hardtanh.cpp...
compiling op_isinf.cpp...
compiling op_index_select.cpp...
compiling op_isnan.cpp...
compiling op_index_put.cpp...
compiling op_lift_fresh_copy.cpp...
compiling op_leaky_relu.cpp...
compiling op_log.cpp...
compiling op_linear_scratch_example.cpp...
compiling op_log1p.cpp...
compiling op_log2.cpp...
compiling op_logical_and.cpp...
compiling op_log10.cpp...
compiling op_log_softmax.cpp...
compiling op_convolution.cpp...
compiling op_logical_or.cpp...
compiling op_logical_xor.cpp...
compiling op_logical_not.cpp...
compiling op_logit.cpp...
compiling op_mm.cpp...
compiling op_max.cpp...
compiling op_min.cpp...
compiling op_max_pool2d_with_indices.cpp...
compiling op_native_batch_norm.cpp...
compiling op_bitwise_or.cpp...
compiling op_bitwise_and.cpp...
../../kernels/portable/cpu/op_native_group_norm.cpp(56): warning: use of NaN via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   56 |       rstd_data[i] = static_cast<CTYPE>(NAN);
      |                                         ^
../../kernels/portable/cpu/op_native_group_norm.cpp(56): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   56 |       rstd_data[i] = static_cast<CTYPE>(NAN);
      |                                         ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_native_group_norm.cpp(56): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   56 |       rstd_data[i] = static_cast<CTYPE>(NAN);
      |                                         ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_native_group_norm.cpp(164): note: in instantiation of function template specialization 'torch::executor::native::(anonymous namespace)::group_norm<double>' requested here
  164 |     group_norm<CTYPE>(
      |     ^
../../kernels/portable/cpu/op_native_group_norm.cpp(56): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   56 |       rstd_data[i] = static_cast<CTYPE>(NAN);
      |                                         ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_native_group_norm.cpp(164): note: in instantiation of function template specialization 'torch::executor::native::(anonymous namespace)::group_norm<float>' requested here
  164 |     group_norm<CTYPE>(
      |     ^
4 warnings generated.
compiling op_native_group_norm.cpp...
compiling op_masked_fill.cpp...
../../kernels/portable/cpu/op_native_layer_norm.cpp(50): warning: use of NaN via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   50 |       rstd_data[i] = static_cast<CTYPE>(NAN);
      |                                         ^
../../kernels/portable/cpu/op_native_layer_norm.cpp(50): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   50 |       rstd_data[i] = static_cast<CTYPE>(NAN);
      |                                         ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_native_layer_norm.cpp(50): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   50 |       rstd_data[i] = static_cast<CTYPE>(NAN);
      |                                         ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_native_layer_norm.cpp(145): note: in instantiation of function template specialization 'torch::executor::native::(anonymous namespace)::layer_norm<double>' requested here
  145 |         layer_norm<CTYPE>(
      |         ^
../../kernels/portable/cpu/op_native_layer_norm.cpp(50): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   50 |       rstd_data[i] = static_cast<CTYPE>(NAN);
      |                                         ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_native_layer_norm.cpp(145): note: in instantiation of function template specialization 'torch::executor::native::(anonymous namespace)::layer_norm<float>' requested here
  145 |         layer_norm<CTYPE>(
      |         ^
4 warnings generated.
compiling op_native_layer_norm.cpp...
compiling op_neg.cpp...
compiling op_bitwise_xor.cpp...
compiling op_nonzero.cpp...
compiling op_ones.cpp...
../../kernels/portable/cpu/op_pdist_forward.cpp(9): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/distance_util.h(119): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
  119 |   } else if (p == INFINITY) {
      |                   ^
1 warning generated.
compiling op_pdist_forward.cpp...
compiling op_mean.cpp...
compiling op_add.cpp...
compiling op_permute_copy.cpp...
../../kernels/portable/cpu/op_floor_divide.cpp(10): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                               ^
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                                          ^
2 warnings generated.
compiling op_floor_divide.cpp...
compiling op_pixel_shuffle.cpp...
compiling op_reciprocal.cpp...
compiling op_reflection_pad1d.cpp...
compiling op_relu.cpp...
compiling op_reflection_pad2d.cpp...
compiling op_repeat.cpp...
compiling op_reflection_pad3d.cpp...
compiling op_replication_pad1d.cpp...
compiling op_replication_pad2d.cpp...
compiling op_replication_pad3d.cpp...
compiling op_roll.cpp...
compiling op_round.cpp...
compiling op_rsqrt.cpp...
compiling op_scalar_tensor.cpp...
compiling op_select_copy.cpp...
compiling op_scatter_add.cpp...
compiling op_eq.cpp...
compiling op_sign.cpp...
compiling op_select_scatter.cpp...
compiling op_sin.cpp...
compiling op_sinh.cpp...
compiling op_sigmoid.cpp...
compiling op_slice_copy.cpp...
compiling op_softmax.cpp...
compiling op_sqrt.cpp...
compiling op_prod.cpp...
compiling op_squeeze_copy.cpp...
compiling op_slice_scatter.cpp...
compiling op_stack.cpp...
compiling op_split_copy.cpp...
compiling op_t_copy.cpp...
compiling op_tan.cpp...
../../kernels/portable/cpu/op_maximum.cpp(11): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                               ^
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                                          ^
2 warnings generated.
compiling op_maximum.cpp...
compiling op_tanh.cpp...
../../kernels/portable/cpu/op_minimum.cpp(11): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                               ^
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                                          ^
2 warnings generated.
compiling op_minimum.cpp...
compiling op_to_copy.cpp...
compiling op_transpose_copy.cpp...
compiling op_split_with_sizes_copy.cpp...
compiling op_tril.cpp...
compiling op_trunc.cpp...
compiling op_unsqueeze_copy.cpp...
compiling op_view_copy.cpp...
compiling op_zeros.cpp...
compiling op_unbind_copy.cpp...
../../kernels/portable/cpu/op_var.cpp(31): warning: use of NaN via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   31 |       out_data[out_ix] = NAN;
      |                          ^
../../kernels/portable/cpu/op_var.cpp(31): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   31 |       out_data[out_ix] = NAN;
      |                          ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_var.cpp(31): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   31 |       out_data[out_ix] = NAN;
      |                          ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_var.cpp(90): note: in instantiation of function template specialization 'torch::executor::native::(anonymous namespace)::compute_variance<double, double>' requested here
   90 |       compute_variance<CTYPE_IN, CTYPE_OUT>(in, out, dim_list, num, denom);
      |       ^
../../kernels/portable/cpu/op_var.cpp(31): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   31 |       out_data[out_ix] = NAN;
      |                          ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_var.cpp(90): note: in instantiation of function template specialization 'torch::executor::native::(anonymous namespace)::compute_variance<double, float>' requested here
   90 |       compute_variance<CTYPE_IN, CTYPE_OUT>(in, out, dim_list, num, denom);
      |       ^
../../kernels/portable/cpu/op_var.cpp(31): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   31 |       out_data[out_ix] = NAN;
      |                          ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_var.cpp(90): note: in instantiation of function template specialization 'torch::executor::native::(anonymous namespace)::compute_variance<float, double>' requested here
   90 |       compute_variance<CTYPE_IN, CTYPE_OUT>(in, out, dim_list, num, denom);
      |       ^
../../kernels/portable/cpu/op_var.cpp(31): warning: use of NaN is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   31 |       out_data[out_ix] = NAN;
      |                          ^~~
C:\Keil_v5\ARM\ARMCLANG\bin\..\include\math.h(272): note: expanded from macro 'NAN'
  272 | #   define NAN __builtin_nanf("")
      |                ^~~~~~~~~~~~~~~~~~
../../kernels/portable/cpu/op_var.cpp(90): note: in instantiation of function template specialization 'torch::executor::native::(anonymous namespace)::compute_variance<float, float>' requested here
   90 |       compute_variance<CTYPE_IN, CTYPE_OUT>(in, out, dim_list, num, denom);
      |       ^
6 warnings generated.
compiling op_var.cpp...
compiling unary_ufunc_realh.cpp...
compiling unary_ufunc_realhb_to_bool.cpp...
compiling unary_ufunc_realhb_to_floath.cpp...
compiling activation_ops_util.cpp...
compiling advanced_index_util.cpp...
compiling op_sum.cpp...
compiling broadcast_util.cpp...
compiling op_where.cpp...
compiling op_rsub.cpp...
../../kernels/portable/cpu/util/distance_util.cpp(9): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/distance_util.h(119): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
  119 |   } else if (p == INFINITY) {
      |                   ^
1 warning generated.
compiling distance_util.cpp...
compiling index_util.cpp...
compiling copy_ops_util.cpp...
compiling op_ne.cpp...
compiling kernel_ops_util.cpp...
compiling matmul_ops_util.cpp...
compiling op_fmod.cpp...
../../kernels/portable/cpu/util/normalization_ops_util.cpp(86): warning: variable length arrays in C++ are a Clang extension [-Wvla-cxx-extension]
   86 |   exec_aten::SizesType shape[ndim];
      |                              ^~~~
../../kernels/portable/cpu/util/normalization_ops_util.cpp(86): note: read of non-const variable 'ndim' is not allowed in a constant expression
../../kernels/portable/cpu/util/normalization_ops_util.cpp(73): note: declared here
   73 |   size_t ndim = normalized_shape.size();
      |          ^
1 warning generated.
compiling normalization_ops_util.cpp...
compiling padding_util.cpp...
compiling select_copy_util.cpp...
compiling repeat_util.cpp...
compiling reduce_util.cpp...
compiling op_sub.cpp...
compiling op_ge.cpp...
compiling binary_ufunc_realb_realb_to_realb_logical.cpp...
../../kernels/portable/cpu/op_remainder.cpp(14): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                               ^
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                                          ^
2 warnings generated.
compiling op_remainder.cpp...
compiling op_gt.cpp...
compiling op_le.cpp...
compiling op_lt.cpp...
compiling op_mul.cpp...
../../kernels/portable/cpu/op_div.cpp(12): warning: In file included from...
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                               ^
../../../../ThirdParty\executorch/kernels/portable/cpu/util/math_util.h(41): warning: use of infinity via a macro is undefined behavior due to the currently enabled floating-point options [-Wnan-infinity-disabled]
   41 |     return std::signbit(a) ? -INFINITY : INFINITY;
      |                                          ^
2 warnings generated.
compiling op_div.cpp...
compiling op_pow.cpp...
creating Library...
After Build - User command #1: xcopy /Y .\Objects\libportable_kernels.lib ..\
.\Objects\libportable_kernels.lib
1 File(s) copied
".\Objects\libportable_kernels.lib" - 0 Error(s), 43 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                https://www.keil.com/pack/ARM.Cortex_DFP.1.1.0.pack
                ARM::Cortex_DFP@1.1.0
                ARM Cortex Reference Subsystems Device Family Pack

<h2>Collection of Component include folders:</h2>
  C:/Users/CHChen59/AppData/Local/Arm/Packs/ARM/Cortex_DFP/1.1.0/Device/ARMCM55/Include

<h2>Collection of Component Files used:</h2>
Build Time Elapsed:  00:00:59
</pre>
</body>
</html>
